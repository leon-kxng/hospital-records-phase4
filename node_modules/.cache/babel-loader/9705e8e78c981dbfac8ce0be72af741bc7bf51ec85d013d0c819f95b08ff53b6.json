{"ast":null,"code":"var _jsxFileName = \"/home/lee/Dev/school/phase4/hospital-records-phase4/src/components/Patient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PatientData from \"./PatientData\"; // Assuming the PatientData component is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Patient = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    fetch('https://hospital-records.replit.app/patients').then(response => response.json()).then(patientsData => setPatients(patientsData));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: patients.map(patient => /*#__PURE__*/_jsxDEV(PatientData, {\n      patientInfo: patient\n    }, patient.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(Patient, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = Patient;\nexport default Patient;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","useEffect","useState","PatientData","jsxDEV","_jsxDEV","Fragment","_Fragment","Patient","_s","patients","setPatients","fetch","then","response","json","patientsData","children","map","patient","patientInfo","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lee/Dev/school/phase4/hospital-records-phase4/src/components/Patient.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PatientData from \"./PatientData\"; // Assuming the PatientData component is in the same directory\n\nconst Patient = () => {\n    const [patients, setPatients] = useState([]);\n\n    useEffect(() => {\n        fetch('https://hospital-records.replit.app/patients')\n            .then(response => response.json())\n            .then(patientsData => setPatients(patientsData))\n    }, []);\n\n    return (\n        <>\n            {patients.map(patient => (\n                <PatientData key={patient.id} patientInfo={patient} />\n            ))}\n        </>\n    );\n}\n\nexport default Patient;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,8CAA8C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,YAAY,IAAIL,WAAW,CAACK,YAAY,CAAC,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACKP,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACjBd,OAAA,CAACF,WAAW;MAAkBiB,WAAW,EAAED;IAAQ,GAAjCA,OAAO,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyB,CACxD;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAAhB,EAAA,CAhBKD,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}